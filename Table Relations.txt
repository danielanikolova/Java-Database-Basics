#1
create table persons
(
		person_id int AUTO_INCREMENT PRIMARY KEY,
		first_name varchar (30) not null,
		salary decimal (10,2),
		passport_id INT UNIQUE NOT NULL
	
);

create table passports
(
		passport_id INT PRIMARY KEY,
		passport_number VARCHAR (8)
);

ALTER TABLE persons
ADD CONSTRAINT fk_persons_passports 
FOREIGN KEY (passport_id)
REFERENCES passports(passport_id);

INSERT INTO passports 
VALUES 
(101, 'N34FG21B'),
(102, 'K65LO4R7'),
(103, 'ZE657QP2');

INSERT INTO persons (first_name, salary, passport_id )
VALUES 
('Roberto', 43300.00, 102),
('Tom',56100.00, 103),
('Yana', 60200.00, 101);


#2

create table manufacturers
(
	manufacturer_id int auto_increment primary key,
	name varchar (20),
	established_on date
	
);
create table models 
(
	model_id int primary key,
	name varchar (20),
	manufacturer_id int	
);

alter table models
add constraint fk_models_manufacturers
foreign key (manufacturer_id)
references manufacturers(manufacturer_id);

insert into manufacturers(name, established_on)
values 
('BMW' , '1916-03-01'),
('Tesla', '2003-01-01'),
('Lada',  '1966-05-01');

insert into models
values
(101, 'X1', 1),
(102, 'i6', 1),
(103, 'Model S', 2),
(104, 'Model X', 2),
(105, 'Model 3', 2),
(106, 'Nova', 3);

#3
create table students
(
	student_id int auto_increment primary key,
	name varchar (50)
);

create table exams
(
	exam_id int primary key,
	name varchar (20)
);

insert into students(name)
values ('Mila'),('Toni'), ('Ron');

insert into exams (exam_id,name) values (101,'Spring MVC'),(102,'Neo4j'), (103,'Oracle 11g');



create table students_exams
(
	student_id int,
	exam_id int,
	constraint pk_students_exams
	primary key (student_id, exam_id),
	constraint fk_students_exams_students
	foreign key (student_id)
	references students(student_id),
	constraint fk_students_exams_exams
	foreign key (exam_id)
	references exams(exam_id)
);

insert into students_exams (student_id, exam_id)
values (1,101),(1,102),(2,101),(3,103),(2,102),(2,103);

#4
create table teachers
(
	teacher_id int primary key,
	name varchar (50),
	manager_id int,
	constraint fk_teachers_teachers
	foreign key (manager_id)
	references teachers(teacher_id)		
);

insert into teachers (teacher_id, name, manager_id)
values
(101, 'John', null),
(105, 'Mark',101),
(106, 'Greta',101),
(104, 'Ted',105),
(102, 'Maya', 106),
(103, 'Silvia',106);

#5
create table item_types
(
	item_type_id int (11) primary key auto_increment,
	name varchar (50)
);

create table items 
(
	item_id int auto_increment primary key,
	name varchar (50),
	item_type_id int (11),
	constraint fk_items_item_types
	foreign key (item_type_id)
	references item_types(item_type_id)
);

create table cities
(
	city_id int (11) auto_increment primary key,
	name varchar(50)
);

create table customers
(
	customer_id int auto_increment primary key,
	name varchar(50),
	birthday date,
	city_id int (11),
	constraint fk_customers_cities
	foreign key(city_id)
	references cities(city_id)
);


create table orders 
(
	order_id int (11) auto_increment primary key,
	customer_id int (11),
	constraint fk_orders_customers
	foreign key (customer_id)
	references customers(customer_id)
);

create table order_items
(
	order_id int (11),
	item_id int (11),
	constraint pk_order_items primary key(order_id,item_id ),
	CONSTRAINT fk_order_items_orders foreign key (order_id) references orders(order_id),
	CONSTRAINT fk_order_items_items FOREIGN KEY (item_id) REFERENCES items(item_id)
);

#6
create table majors 
(
	major_id int (11) auto_increment primary key,
	name varchar (50)
);

create table students
(
	student_id int (11) auto_increment primary key,
	student_number varchar (12),
	student_name varchar (50),
	major_id int (11),
	constraint fk_students_majors foreign key (major_id) references majors(major_id)
);

create table payments
(
	payment_id int (11) auto_increment primary key,
	payment_date date,
	payment_amount decimal (8,2),
	student_id int (11),
	constraint fk_payments_students foreign key (student_id) references students(student_id)
);

create table subjects
(
	subject_id int (11) auto_increment primary key,
	subject_name varchar(50)
);


create table agenda
(
	student_id int(11),
	subject_id int (11),
	constraint pk_agenda primary key(student_id, subject_id),
	constraint fk_agenda_subjects foreign key (subject_id) references subjects(subject_id),
	constraint fk_agenda_students foreign key (student_id) references students(student_id)
	
);

#7
select m.mountain_range as  mountain_range, 
p.peak_name as peak_name,
p.elevation as peak_elevation
from mountains as m join peaks as p
on m.id = p.mountain_id
where m.mountain_range = 'Rila'
order by p.elevation desc;


